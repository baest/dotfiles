
add_newline = false

[cmd_duration]
min_time = 1

[character]
#error_symbol = "[✗](bold red) "
error_symbol = "[❯](bold red)"
success_symbol = "[❯](green)"

[hostname]
format =  "❮$hostname❯ "
disabled = false

[username]
style_user = "bold dimmed blue"
show_always = true

[directory]
truncation_length = 10
truncate_to_repo = false

[time]
disabled = false
time_format = "%T"

[battery]
disabled = false
#full_symbol = "🔋"
charging_symbol = "⚡️"
#discharging_symbol = "💀"

[[battery.display]]
threshold = 30
style = "bold red"

[jobs]

[memory_usage]
threshold = 80
style = "bold dimmed green"
disabled = false
format = "$symbol [${ram}( | ${swap})]($style) "

[git_branch]
style = "bold yellow"

[git_status]
conflicted = "⚔️ "
#diverged = "🔱 "
#untracked = "🛤️ "
#untracked = "[$count](green)🤷"
#stashed = "[$count](bold red)📦 "
#modified = "[$count](red)📝 "
#staged = "[$count](blue)🗃️ "
#renamed = "📛 "
#deleted = "🗑"
style = "black"
ahead = "⇡${count}"
behind = "⇣${count}"

[git_commit]
#commit_hash_length = 7
only_detached = false
format = "[\\($hash\\)]($style) "

[git_state]
format = "[\\($state( $progress_current of $progress_total)\\)]($style) "
#cherry_pick = "[🍒 PICKING](bold red)"

[python]

[perl]
format = "[$symbol($version )]($style)"

[status]
disabled = false
format = " [$symbol$status]($style) "

[kubernetes]
disabled = false
detect_env_vars = [ 'K8S' ]
#detect_files = ['k8s'] # for some reason this needs to be 

[custom.jj]
ignore_timeout = true
description = "current jj status"
symbol = "🥋 "
when = true
command = '''
jj root > /dev/null && jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "…",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''
#command = '''
#jj log -r@ -l1 --ignore-working-copy --no-graph --color always  -T '
#  separate(" ",
#    branches.map(|x| x.name()).join(" "),
#    if(conflict, "conflict"),
#    if(divergent, "divergent"),
#    if(hidden, "hidden"),
#  )
#'
#'''
#symbol = "jj"

#[custom.jjstate]
#detect_folders = [".jj"]
#command = '''
#jj log -r@ -n1 --no-graph -T "" --stat | tail -n1 | perl -pE 's/(\d+) files? changed, (\d+) insertions?\(\+\), (\d+) deletions?\(-\)/$1m $2+ $3-/'
#'''
