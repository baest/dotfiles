let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/src/database-schema/dnsdb
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +300 ~/0233_record_lookup.sql
badd +380 ~/test.sq
badd +8 ~/0234_get_matching_wildcard_recs_doc.sql
badd +14 ~/test2.sq
badd +137 ~/0238_change_query.sql
badd +1 /Users/change_prefix_to_fqdn.sql
badd +3 ~/0238_drop_dns_record_structure.sql
badd +27 ~/0239_fix_wildcard_performance.sql
badd +60 ~/0241_perf_quirk.sql
badd +33 ~/0242_change_nsec.sql
badd +90 ~/0243_perf_quirk2.sql
badd +80 ~/abe.sql
badd +6 ~/0244_ent_in_record.sql
badd +1 ~/0245_create_missing_index.sql
badd +88 ~/0246_support_alias.sql
badd +1 ~/0247_drop_dns_record_structure.sql
badd +15 ~/0247_optimize_all_hosts.sql
badd +6 ~/0248_grant_auth_get_all_domains_view.sql
badd +31 ~/0249_drop_dns_record_structure.sql
badd +1 ~/0253_zone_in_domains.sql
badd +13 ~/0254_fix_all_domain_view.sql
badd +64 ~/0255_promdress.sql
badd +16 ~/0256_privs.sql
badd +1 ~/0258_change_domain_structure.sql
badd +1 ~/../fixture/migration/100_service_service_and_friends.sql
badd +1 ~/0259_validate_constraints.sql
badd +10 migration/0263_soa_for_service_domains.sql
badd +1 migration/0263_fix_dnsdb_pdns_interface.sql
badd +1 migration/0264_soa_for_service_domains2.sql
badd +141 migration/0266_service_zone_structure.sql
badd +1 migration/0258_the_first_flattening.sql
badd +4 migration/0258_change_domain_structure.sql
badd +1 migration/0267_drop_record_coredb_ref.sql
badd +1 fixture/migration/100_service_service_and_friends.sql
badd +1 fixture/migration/1001_invent_brand2.sql
badd +5 fixture/migration/9000_post_cleanup.sql
badd +2 migration/0267_drop_coredb_fields_from_domain.sql
badd +2 migration/0268_cleanup_servicezone_records.sql
badd +1 \[Command\ Line]
badd +24 migration/0268_fix_default_privs_after_change_to_postgresql.sql
badd +15 migration/0269_changes_from_prod.sql
badd +15 lint_config.pl
badd +1 migration/0270_change_service_zone_brand_name.sql
badd +6 migration/0271_locked_service_zone_records.sql
badd +11 migration/0273_add_auth_to_record.sql
argglobal
%argdel
$argadd ~/0233_record_lookup.sql
edit migration/0266_service_zone_structure.sql
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 138 + 181) / 362)
exe 'vert 2resize ' . ((&columns * 223 + 181) / 362)
argglobal
balt lint_config.pl
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 141 - ((29 * winheight(0) + 42) / 84)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 141
normal! 0114|
wincmd w
argglobal
if bufexists(fnamemodify("migration/0273_add_auth_to_record.sql", ":p")) | buffer migration/0273_add_auth_to_record.sql | else | edit migration/0273_add_auth_to_record.sql | endif
if &buftype ==# 'terminal'
  silent file migration/0273_add_auth_to_record.sql
endif
balt migration/0271_locked_service_zone_records.sql
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 10 - ((9 * winheight(0) + 42) / 84)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 10
normal! 043|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 138 + 181) / 362)
exe 'vert 2resize ' . ((&columns * 223 + 181) / 362)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
