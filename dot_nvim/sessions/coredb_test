let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/src/database-schema/coredb
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +158 test/451_dns_records_view.t
badd +183 test/lib/CoreDBTestHelper.pm
badd +171 ../dbcommon/lib/DBTestHelper.pm
badd +32 test/350_zones.t
badd +25 test/800_domain_add.t
badd +2 test/480_dns_change_trigger.t
badd +403 test/702_lookup_mail_cluster.t
badd +73 test/704_lookup_domain_dkim.t
badd +101 test/405_service_network.t
badd +233 test/460_dns_get_cluster_records.t
badd +35 test/470_dns_export_get_zone_records.t
badd +32 test/450_dns_get_records.t
badd +23 test/410_dns_get_service_zone.t
badd +156 test/420_domain_dns_record_list.t
badd +74 test/475_dnssec.t
badd +108 ../dbcommon/lint/100_table_indexes.t
badd +74 ../dbcommon/lib/LintHelper.pm
badd +69 lint_config.pl
badd +1 ~/src/database-schema/servicedb/test/709_lookup_certificate.t
argglobal
%argdel
$argadd test/451_dns_records_view.t
edit test/450_dns_get_records.t
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 167 + 135) / 270)
exe 'vert 2resize ' . ((&columns * 102 + 135) / 270)
argglobal
balt test/470_dns_export_get_zone_records.t
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 32 - ((23 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 32
normal! 093|
wincmd w
argglobal
if bufexists(fnamemodify("test/460_dns_get_cluster_records.t", ":p")) | buffer test/460_dns_get_cluster_records.t | else | edit test/460_dns_get_cluster_records.t | endif
if &buftype ==# 'terminal'
  silent file test/460_dns_get_cluster_records.t
endif
balt test/450_dns_get_records.t
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 286 - ((0 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 286
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 167 + 135) / 270)
exe 'vert 2resize ' . ((&columns * 102 + 135) / 270)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
