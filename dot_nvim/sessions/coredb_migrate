let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/src/database-schema/coredb
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +232 fixture/migration/0350_test_pods.sql
badd +1 fixture/migration/9000_post_cleanup.sql
badd +1 migration/0859_key_set_queue_index.sql
badd +551 migration/0866_add_dns_export_trigger_on_domain2cluster_migration.sql
badd +10 migration/0873_add_service_zone_network.sql
badd +1 migration/0579_zone_dns_export.sql
badd +2 fyi/public/f_dns_reverse_inet.sql
badd +1 migration/0874_default_expected_update_at.sql
badd +1 fyi/public/t_zone_dnssec_key_set.sql
badd +1 migration/0875_extend_zone_dnssec_key_set_view.sql
badd +592 fyi/dns_export/f_change_trigger.sql
badd +356 migration/0875_change_trigger_service_dns_ip_blacklist.sql
badd +3 fyi/dnssecbot/type_error_type.sql
badd +1 migration/0876_add_validation_error.sql
badd +40 fyi/public/v_dns_zone_mail_records.sql
badd +153 fyi/dns_export/f_get_cluster_records.sql
badd +2 fyi/public/v_dns_zone_cluster_service_records_view.sql
badd +1 .verify-migration-names-ignore
badd +2 fyi/dns_export/f_get_records_single_zone.sql
badd +16 fyi/public/v_dns_zone_service_fqdn_records_view.sql
badd +1 migration/0886_maillogin_fqdn_service_dns_in_cluster.sql
badd +1 test/480_dns_change_trigger.test
badd +1 migration/0887_fix_domain2cluster_migration_dns_export_priority.sql
badd +12 fyi/dns_export/f_get_domain_records.sql
badd +246 fyi/dns_export/f_get_records_single_domain.sql
badd +2 migration/0888_add_zone_dns_signals.sql
badd +2 fyi/public/v_zone_dnssec_key_set_cryptokey_view.sql
badd +2 fyi/public/v_zone_service_dns_view.sql
badd +86 abe.sql
badd +26 ~/src/database-schema/coredb/migration/0894_fix_service_dns_view.sql
badd +9 fyi/public/v_domain_service_dns_view.sql
badd +1 ~/src/database-schema/coredb/migration/0895_fix_axfr_ip_being_set.sql
badd +60 fyi/public/f_gprpc1_domain_service_get_settings_extended.sql
badd +71 fyi/dns_export/f_get_zone_records.sql
badd +19 fyi/dns_export/v_dns_zone_records_view.sql
badd +16 fyi/public/v_dns_zone_service_records_view.sql
badd +2 fyi/public/f_dns_get_zone_web_records.sql
badd +4 fyi/public/f_dns_get_web_records.sql
badd +35 ~/src/database-schema/coredb/migration/0909_change_website_parking_to_dns_service.sql
badd +1 migration/0910_change_zone_delete_priority.sql
badd +1 migration/0909_change_zone_delete_priority.sql
badd +67 migration/0896_domain2cluster_migration_rework.sql
badd +8 migration/0902_domain2cluster_fix_dns.sql
badd +1 migration/0917_add_zone_dns_signals.sql
badd +38 migration/0919_add_zone_dns_signals.sql
badd +5 migration/0920_add_crypto_migration.sql
badd +4 ~/src/database-schema/coredb/migration/0927_better_unique_index_on_service_dns.sql
badd +2 ~/src/database-schema/coredb/migration/0929_cryptokey_migrate_default.sql
badd +3 fixture/migration/9900_test_helpers.sql
badd +2 fyi/dns_export/f_get_brand_ns.sql
badd +8 ~/src/database-schema/coredb/migration/0941_get_brand_ns.sql
badd +27 fyi/dns_export/f_get_zone_suspension_info.sql
badd +1 ~/src/database-schema/coredb/migration/0977_zone_export.sql
badd +128 fyi/public/v_certificate_request_view.sql
badd +43 ~/src/database-schema/coredb/migration/0977_cert_request_view_order_by_fix.sql
badd +1 migration/0978_disallow_service_zone_as_customer_zone.sql
badd +2 fyi/dns_export/f_queue_zone.sql
badd +21 migration/0980_disallow_service_zone_as_customer_zone.sql
badd +23 migration/0988_disallow_service_zone_as_customer_zone.sql
badd +182 migration/0978_promdress_migrate.sql
badd +4 ~/src/database-schema/coredb/migration/0989_promdress_add_description.sql
badd +2 ~/src/database-schema/coredb/migration/0990_promdress_dnssec.sql
badd +13 ~/src/database-schema/coredb/migration/0992_handle_no_services.sql
badd +45 ~/src/database-schema/coredb/migration/0993_no_cluster_service_usage_in_domain_model.sql
badd +1 ~/src/database-schema/coredb/migration/0994_dnssec_cryptokeys_promdress.sql
badd +2 ~/src/database-schema/coredb/migration/0995_dnssec_cryptokeys_promdress_comment.sql
badd +4 ~/src/database-schema/coredb/migration/0996_dnssec_cryptokeys_promdress.sql
badd +60 ~/src/database-schema/coredb/migration/0997_sync_registry_flags.sql
badd +1 fyi/public/t_zone.sql
badd +54 lint_config.pl
badd +1 ~/src/database-schema/coredb/migration/1001_dns_suspension.sql
badd +1 test/900_domain2cluster.t
badd +6 ~/src/database-schema/coredb/migration/1002_fix_linting.sql
badd +550 ~/src/database-schema/coredb/migration/1005_new_mysql_service_record.sql
badd +1 ~/src/database-schema/coredb/migration/1004_move_views_into_dns_export.sql
badd +1 ~/src/database-schema/coredb/migration/1006_dnssec_missing_index.sql
badd +1 ~/src/database-schema/coredb/migration/1007_get_cluster_records.sql
badd +242 ~/src/database-schema/coredb/migration/1008_only_dkim_when_needed.sql
badd +326 migration/0939_identity_columns_new_identity.sql
badd +2 fyi/dns_export/v_dns_zone_cluster_service_records_view.sql
badd +10 ~/src/database-schema/coredb/migration/1011_dkim_helpers.sql
badd +1 ~/src/database-schema/coredb/migration/1011_zone_mail_records.sql
badd +1 ~/src/database-schema/coredb/migration/1012_remove_unused_idx.sql
badd +20 ~/src/database-schema/coredb/migration/1015_fix_zone_mail_records_again.sql
badd +175 migration/1018_fix_dkim_domain.sql
badd +1 ~/src/database-schema/coredb/migration/1019_reload_dns_export_queue_often.sql
badd +85 ~/src/database-schema/coredb/migration/1021_certificate_request_view.sql
badd +1 fyi/dns_export/v_records_view.sql
badd +1 ~/src/database-schema/coredb/migration/1024_remove_acme_weirdness.sql
badd +43 fyi/public/f_domain_service_get_info.sql
badd +1 ~/src/database-schema/coredb/migration/1026_dnssec_better_stat.sql
badd +35 ~/src/database-schema/coredb/migration/1027_add_options_to_dnssec_keyset.sql
badd +55 ~/src/database-schema/coredb/migration/1035_acme_record.sql
badd +151 tmp/test.sql
badd +98 fyi/dns_export/v_zone_cluster_service_records_view.sql
badd +1 fyi/dns_export/v_zone_service_records_view.sql
badd +1 ~/src/database-schema/coredb/migration/1046_service_dns_simplify.sql
badd +13 ~/src/database-schema/coredb/migration/1047_empty_acme-challenge.sql
badd +130 ~/src/database-schema/coredb/migration/1048_change_negative_ttl_soa.sql
badd +3 ~/src/database-schema/coredb/migration/1050_cert_for_webforward.sql
badd +96 ~/src/database-schema/coredb/migration/1055_cert_for_webforward_fix.sql
argglobal
%argdel
$argadd migration/0579_zone_dns_export.sql
edit tmp/test.sql
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 167 + 135) / 270)
exe 'vert 2resize ' . ((&columns * 102 + 135) / 270)
argglobal
balt fyi/dns_export/f_queue_zone.sql
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 151 - ((32 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 151
normal! 029|
wincmd w
argglobal
if bufexists(fnamemodify("~/src/database-schema/coredb/migration/1055_cert_for_webforward_fix.sql", ":p")) | buffer ~/src/database-schema/coredb/migration/1055_cert_for_webforward_fix.sql | else | edit ~/src/database-schema/coredb/migration/1055_cert_for_webforward_fix.sql | endif
if &buftype ==# 'terminal'
  silent file ~/src/database-schema/coredb/migration/1055_cert_for_webforward_fix.sql
endif
balt ~/src/database-schema/coredb/migration/1050_cert_for_webforward.sql
setlocal foldmethod=manual
setlocal foldexpr=0
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
silent! normal! zE
let &fdl = &fdl
let s:l = 96 - ((0 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 96
normal! 0109|
wincmd w
exe 'vert 1resize ' . ((&columns * 167 + 135) / 270)
exe 'vert 2resize ' . ((&columns * 102 + 135) / 270)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
