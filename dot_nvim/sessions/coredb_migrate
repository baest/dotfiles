let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/src/database-schema/coredb
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +82 migration/0579_zone_dns_export.sql
badd +201 fyi/public/f_dns_get_records_single_domain.sql
badd +57 fyi/public/f_dns_export_get_records.sql
badd +23 fyi/public/v_dns_records_view.sql
badd +1 fyi/public/f_dns_export_cluster_suspension_info.sql
badd +1 fyi/public/v_cluster_service_current_assignment_view.sql
badd +2 fyi/public/f_dns_export_get_cluster_records.sql
badd +1 migration/0610_add_dns_export_get_zone_records.sql
badd +123 migration/0612_make_zone_events.sql
badd +68 migration/0611_dns_export_trigger_on_domain_suspension.sql
badd +7 fyi/promdress/type_metric_t.sql
badd +26 migration/0613_fix_promdress_dns_export_queue_total_view.sql
badd +17 migration/0614_add_internal_custom_dns.sql
badd +1 migration/0614_missing_grant_dkim.sql
badd +345 migration/0616_empty_fqdn_should_not_trigger_domain_dns_export_again.sql
badd +1 migration/0615_empty_fqdn_should_not_trigger_domain_dns_export.sql
badd +395 migration/0617_add_internal_custom_dns.sql
badd +1 migration/0617_drop_old_dns_export_tables.sql
badd +343 migration/0619_add_zone_dns_export_events.sql
badd +128 migration/0619_handle_nullable_domain_id.sql
badd +50 migration/0623_add_zone_dns_export_events.sql
badd +1 migration/0631_redo_service_dns_view.sql
badd +8 migration/0538_no_soa_records_in_service_dns.sql
badd +21 migration/0633_redo_service_dns_view_again.sql
badd +38 migration/0634_zone_domain_mutual_exclusion.sql
badd +1 migration/0634_fix_service_dns_views.sql
badd +18 migration/0634_add_zone_dns_export_events.sql
badd +69 migration/0639_fix_dns_export_change_trigger.sql
badd +374 migration/0640_fix_dns_export_change_trigger_again.sql
badd +3 migration/0644_drop_zone_stuff_in_legacy_model.sql
badd +111 migration/0647_drop_more_zone_stuff_in_legacy_model.sql
badd +1 migration/0647_drop_last_zone_sync_trigger.sql
badd +46 fyi/public/v_dns_zone_mail_records.sql
badd +2 fyi/public/v_dns_domain_service_records_view.sql
badd +26 migration/0649_make_dkim_records_great_again.sql
badd +13 migration/0651_drop_domain_id_in_fqdn.sql
badd +87 migration/0652_drop_domain_suspension.sql
badd +4 migration/0654_lookup_dkim.sql
badd +34 migration/0655_lookup_dkim.sql
badd +70 migration/0681_service_zone.sql
badd +64 migration/0664_add_vm_related_relations.sql
badd +85 migration/0694_service_zone_data.sql
badd +1 migration/0696_export_ptr_records_and_service_zone.sql
badd +12 migration/0694_service_zone_data2_test_zone.sql
badd +64 migration/0695_change_dns_export_queue.sql
badd +1 coredb/migration/0695_export_ptr_records_and_service_zone.sql
badd +688 migration/0695_export_ptr_records_and_service_zone.sql
badd +2 migration/0703_change_service_zone_brand_name.sql
badd +15 migration/0705_fix_missing_ns_records_for_service_zone.sql
badd +1 migration/0710_run_dns_export_on_webroute_update.sql
badd +24 migration/0711_no_soa_serial_bump_on_cluster_change.sql
badd +3 migration/0721_add_default_soa_for_service_zone.sql
badd +8 migration/0721_domains_as_service_zone.sql
badd +232 fixture/migration/0350_test_pods.sql
badd +2 migration/0720_domain_zone_mutual_exclusion_immediate.sql
badd +4 migration/0720_zone_domain_mutual_exclusion_immediate.sql
badd +104 migration/0712_service_assignment2cluster_service_instance.sql
badd +1 migration/0724_export_fqdn_on_cluster.sql
badd +631 migration/0730_export_fqdn_from_coredb.sql
badd +1 fixture/migration/9000_post_cleanup.sql
badd +1 abe.sql
badd +1 migration/0736_remove_wildcard.one.com.sql
badd +32 migration/0736_fix_default_privs_after_change_to_postgresql.sql
badd +1 migration/0737_reassign_database_migrator_to_postgres.sql
badd +95 migration/0737_fix_grants_dns.sql
badd +96 migration/0738_support_a_records_for_ptr.sql
badd +3 migration/0754_service_dns_should_have_a_service_shard.sql
badd +4 migration/0772_create_dogado.de_brand.sql
badd +2 migration/0776_create_dogado_de_brand.sql
badd +1 migration/0778_change_ns_for_service_zone.sql
badd +1 migration/0777_change_soa_for_service_zone.sql
badd +60 migration/0785_disabled_cnames_blocks_only_cname.sql
badd +3 migration/0786_rename_service_zone_brand.sql
badd +35 migration/0787_change_soa_ns_for_mostly_unused_brands.sql
badd +1 migration/0788_dnssec_bot.sql
badd +1 migration/0111_support_ssl_for_cluster.sql
badd +1 migration/0816_add_acme_challenge_to_cluster.sql
badd +1 migration/0814_dnssec_bot.sql
badd +1 migration/0999_fix_acme_challenge.sql
badd +84 migration/0821_add_acme_challenge_to_cluster.sql
badd +1 migration/0830_fix_acme_challenge.sql
badd +1 migration/0830_update_ftp_acme_challenge_on_cluster.sql
badd +34 ~/src/database-schema/coredb/migration/0837_dnssec_bot.sql
badd +1 ~/src/database-schema/coredb/migration/0836_fix_acme_challenge.sql
badd +11 migration/0838_dnssec_bot_v2.sql
badd +56 migration/0840_dnssec_botv3.sql
badd +543 migration/0841_zone_dnssec_key_set_changes.sql
badd +15 migration/0844_dnssecbot_v4.sql
badd +6 migration/0846_zone_dnssec_key_set_cryptokey_view.sql
badd +1 migration/0850_change_bss_to_registry_zone_dnssec.sql
badd +1 migration/0851_change_live_to_in_dns_for_dnssec.sql
argglobal
%argdel
$argadd migration/0579_zone_dns_export.sql
edit migration/0844_dnssecbot_v4.sql
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 156 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 96 + 126) / 253)
argglobal
balt migration/0841_zone_dnssec_key_set_changes.sql
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 15 - ((14 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 15
normal! 039|
wincmd w
argglobal
if bufexists(fnamemodify("migration/0851_change_live_to_in_dns_for_dnssec.sql", ":p")) | buffer migration/0851_change_live_to_in_dns_for_dnssec.sql | else | edit migration/0851_change_live_to_in_dns_for_dnssec.sql | endif
if &buftype ==# 'terminal'
  silent file migration/0851_change_live_to_in_dns_for_dnssec.sql
endif
balt migration/0850_change_bss_to_registry_zone_dnssec.sql
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 053|
wincmd w
exe 'vert 1resize ' . ((&columns * 156 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 96 + 126) / 253)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
