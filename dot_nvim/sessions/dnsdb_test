let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/src/database-schema/dnsdb
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +62 test/lib/DnsDBTestHelper.pm
badd +13 test/310_auth_list_q.t
badd +45 test/300_auth_basic_q.t
badd +237 test/250_get_records.t
badd +10 test/600_acme_challenge-cname.t
badd +1 test/900_performance.t
badd +97 ../tools/t/lib/TestHelpers.pm
badd +112 ../dbcommon/lib/DBTestHelper.pm
badd +21 test/210_get_prefix_from_suffix.t
badd +207 test/304_auth_any_q.t
badd +11 test/301_get_all_domains.t
badd +28 test/320_service_suffix_records.t
badd +11 test/350_additional_pdns_functions.t
badd +3 test/400_lookup_records.t
badd +1 test/250_get_dns_records.t
badd +5 /opt/homebrew/Cellar/perl/5.34.0/lib/perl5/5.34.0/strict.pm
badd +18 test/220_get_prefix_conflict_pattern.t
badd +21 test/100_create_new_domain.t
badd +9 test/200_get_domain_info_from_query.t
badd +15 test/330_nsec_order_functions.t
badd +16 script/check_perf.pl
badd +8 test/260_record_update.t
badd +27 test/101_dual_references.t
badd +1 dbcommon/lib/DBTestHelper.pm
badd +34 ~/src/master_database-schema/dnsdb/test/900_performance.t
argglobal
%argdel
$argadd test/lib/DnsDBTestHelper.pm
$argadd test/310_auth_list_q.t
edit test/900_performance.t
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 224 + 181) / 362)
exe 'vert 2resize ' . ((&columns * 137 + 181) / 362)
argglobal
if bufexists(fnamemodify("test/900_performance.t", ":p")) | buffer test/900_performance.t | else | edit test/900_performance.t | endif
if &buftype ==# 'terminal'
  silent file test/900_performance.t
endif
balt test/lib/DnsDBTestHelper.pm
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 114 - ((0 * winheight(0) + 42) / 84)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 114
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("test/300_auth_basic_q.t", ":p")) | buffer test/300_auth_basic_q.t | else | edit test/300_auth_basic_q.t | endif
if &buftype ==# 'terminal'
  silent file test/300_auth_basic_q.t
endif
balt test/900_performance.t
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 44 - ((0 * winheight(0) + 42) / 84)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 44
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 224 + 181) / 362)
exe 'vert 2resize ' . ((&columns * 137 + 181) / 362)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=1
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
